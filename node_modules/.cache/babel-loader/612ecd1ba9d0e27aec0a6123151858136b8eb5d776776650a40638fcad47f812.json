{"ast":null,"code":"import axios from \"axios\";\n\n// API Base URL - Change this to your local server when using MongoDB Compass\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://todo-app-server-eosin.vercel.app/api' : 'http://localhost:8080/api';\nconsole.log('🌐 API Base URL:', API_BASE_URL);\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  try {\n    const userData = localStorage.getItem('userData');\n    let token = null;\n    if (userData) {\n      const parsedUserData = JSON.parse(userData);\n      token = parsedUserData.token;\n    }\n    if (token) {\n      config.headers['x-access-token'] = token;\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n  } catch (error) {\n    console.error('Error parsing user data from localStorage:', error);\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('Response interceptor error:', error);\n  if (error.response?.status === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('userData');\n    if (typeof window !== 'undefined') {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('/users/register', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Registration failed';\n    throw new Error(errorMessage);\n  }\n}\nexport async function loginUser(userData) {\n  try {\n    const response = await api.post('/users/login', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Login failed';\n    throw new Error(errorMessage);\n  }\n}\nexport async function getTodos() {\n  try {\n    const response = await api.get('/todos');\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to fetch todos';\n    throw new Error(errorMessage);\n  }\n}\nexport async function createTodo(todo) {\n  try {\n    const response = await api.post('/todos', todo);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to create todo';\n    throw new Error(errorMessage);\n  }\n}\nexport async function updateTodo(todo) {\n  try {\n    if (todo.completed) {\n      todo.completed_time = Date.now();\n    } else {\n      todo.completed_time = null;\n    }\n    const response = await api.put(`/todos/${todo._id}`, todo);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to update todo';\n    throw new Error(errorMessage);\n  }\n}\nexport async function deleteTodo(id) {\n  try {\n    const response = await api.delete(`/todos/${id}`);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete todo';\n    throw new Error(errorMessage);\n  }\n}\nexport async function deleteAllTodos() {\n  try {\n    const response = await api.delete('/todos/delete/all');\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete all todos';\n    throw new Error(errorMessage);\n  }\n}","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","console","log","api","create","baseURL","timeout","interceptors","request","use","config","userData","localStorage","getItem","token","parsedUserData","JSON","parse","headers","error","Promise","reject","response","status","removeItem","window","location","href","registerUser","post","data","success","errorMessage","message","Error","loginUser","getTodos","get","createTodo","todo","updateTodo","completed","completed_time","Date","now","put","_id","deleteTodo","id","delete","deleteAllTodos"],"sources":["C:/Users/ayanm/Downloads/todo-app-mevn-main/todo-app-mevn-main/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// API Base URL - Change this to your local server when using MongoDB Compass\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://todo-app-server-eosin.vercel.app/api'\n  : 'http://localhost:8080/api';\n\nconsole.log('🌐 API Base URL:', API_BASE_URL);\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    try {\n      const userData = localStorage.getItem('userData');\n      let token = null;\n      \n      if (userData) {\n        const parsedUserData = JSON.parse(userData);\n        token = parsedUserData.token;\n      }\n      \n      if (token) {\n        config.headers['x-access-token'] = token;\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.error('Error parsing user data from localStorage:', error);\n    }\n    \n    return config;\n  },\n  (error) => {\n    console.error('Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('Response interceptor error:', error);\n    \n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('userData');\n      if (typeof window !== 'undefined') {\n        window.location.href = '/login';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('/users/register', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Registration failed';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function loginUser(userData) {\n  try {\n    const response = await api.post('/users/login', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Login failed';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function getTodos() {\n  try {\n    const response = await api.get('/todos');\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to fetch todos';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function createTodo(todo) {\n  try {\n    const response = await api.post('/todos', todo);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to create todo';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function updateTodo(todo) {\n  try {\n    if (todo.completed) {\n      todo.completed_time = Date.now();\n    } else {\n      todo.completed_time = null;\n    }\n\n    const response = await api.put(`/todos/${todo._id}`, todo);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to update todo';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function deleteTodo(id) {\n  try {\n    const response = await api.delete(`/todos/${id}`);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete todo';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function deleteAllTodos() {\n  try {\n    const response = await api.delete('/todos/delete/all');\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete all todos';\n    throw new Error(errorMessage);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}