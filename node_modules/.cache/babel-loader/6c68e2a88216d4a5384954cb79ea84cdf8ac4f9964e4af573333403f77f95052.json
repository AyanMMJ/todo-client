{"ast":null,"code":"import axios from \"axios\";\n\n// API Base URL - Change this to your local server when using MongoDB Compass\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://todo-app-server-eosin.vercel.app/api' : 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('userData') ? JSON.parse(localStorage.getItem('userData')).token : null;\n  if (token) {\n    config.headers['x-access-token'] = token;\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response?.status === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('userData');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Helper to normalize auth responses into a flat shape { token, _id, email, picture }\nfunction normalizeAuthResponse(raw) {\n  // New format: { success, message, data: { token, _id, email, picture } }\n  if (raw && raw.data && raw.success !== undefined) {\n    return raw.data;\n  }\n  // Axios response wrapper\n  if (raw && raw.data && raw.data.data) {\n    return raw.data.data;\n  }\n  // Old register format: { user, token }\n  if (raw && raw.user && raw.token) {\n    return {\n      ...raw.user,\n      token: raw.token\n    };\n  }\n  // Old login format: full user with token inside\n  if (raw && raw.token && raw.email && raw._id) {\n    return raw;\n  }\n  // Fallback\n  return raw;\n}\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('/users/register', userData);\n    const raw = response.data;\n    return normalizeAuthResponse(raw);\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\nexport async function loginUser(userData) {\n  try {\n    const response = await api.post('/users/login', userData);\n    const raw = response.data;\n    return normalizeAuthResponse(raw);\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\nexport async function getTodos(userId) {\n  try {\n    const response = await api.get('/todos', {\n      params: {\n        userId\n      }\n    });\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\nexport async function createTodo(todo, userId) {\n  try {\n    const response = await api.post('/todos', todo, {\n      params: {\n        userId\n      }\n    });\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\nexport async function updateTodo(todo) {\n  try {\n    if (todo.completed) {\n      todo.completed_time = Date.now();\n    } else {\n      todo.completed_time = null;\n    }\n    const response = await api.put(`/todos/${todo._id}`, todo);\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\nexport async function deleteTodo(id) {\n  try {\n    const response = await api.delete(`/todos/${id}`);\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\nexport async function deleteAllTodos(userId) {\n  try {\n    const response = await api.delete('/todos/delete/all', {\n      params: {\n        userId\n      }\n    });\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","JSON","parse","headers","error","Promise","reject","response","status","removeItem","window","location","href","normalizeAuthResponse","raw","data","success","undefined","user","email","_id","registerUser","userData","post","loginUser","getTodos","userId","get","params","createTodo","todo","updateTodo","completed","completed_time","Date","now","put","deleteTodo","id","delete","deleteAllTodos"],"sources":["C:/Users/ayanm/Downloads/todo-app-mevn-main/todo-app-mevn-main/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// API Base URL - Change this to your local server when using MongoDB Compass\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://todo-app-server-eosin.vercel.app/api'\n  : 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('userData') \n      ? JSON.parse(localStorage.getItem('userData')).token \n      : null;\n    \n    if (token) {\n      config.headers['x-access-token'] = token;\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('userData');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Helper to normalize auth responses into a flat shape { token, _id, email, picture }\nfunction normalizeAuthResponse(raw) {\n  // New format: { success, message, data: { token, _id, email, picture } }\n  if (raw && raw.data && raw.success !== undefined) {\n    return raw.data;\n  }\n  // Axios response wrapper\n  if (raw && raw.data && raw.data.data) {\n    return raw.data.data;\n  }\n  // Old register format: { user, token }\n  if (raw && raw.user && raw.token) {\n    return { ...raw.user, token: raw.token };\n  }\n  // Old login format: full user with token inside\n  if (raw && raw.token && raw.email && raw._id) {\n    return raw;\n  }\n  // Fallback\n  return raw;\n}\n\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('/users/register', userData);\n    const raw = response.data;\n    return normalizeAuthResponse(raw);\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\n\nexport async function loginUser(userData) {\n  try {\n    const response = await api.post('/users/login', userData);\n    const raw = response.data;\n    return normalizeAuthResponse(raw);\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\n\nexport async function getTodos(userId) {\n  try {\n    const response = await api.get('/todos', {\n      params: { userId }\n    });\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\n\nexport async function createTodo(todo, userId) {\n  try {\n    const response = await api.post('/todos', todo, {\n      params: { userId }\n    });\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\n\nexport async function updateTodo(todo) {\n  try {\n    if (todo.completed) {\n      todo.completed_time = Date.now();\n    } else {\n      todo.completed_time = null;\n    }\n\n    const response = await api.put(`/todos/${todo._id}`, todo);\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\n\nexport async function deleteTodo(id) {\n  try {\n    const response = await api.delete(`/todos/${id}`);\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\n\nexport async function deleteAllTodos(userId) {\n  try {\n    const response = await api.delete('/todos/delete/all', {\n      params: { userId }\n    });\n    return response.data.data || response.data; // Handle both new and old response formats\n  } catch (error) {\n    throw error.response?.data || error;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}