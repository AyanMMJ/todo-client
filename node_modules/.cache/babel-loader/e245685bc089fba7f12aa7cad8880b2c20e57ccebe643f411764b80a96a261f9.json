{"ast":null,"code":"import axios from \"axios\";\n\n// API Base URL - Change this to your local server when using MongoDB Compass\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://todo-app-server-eosin.vercel.app/api' : 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('userData') ? JSON.parse(localStorage.getItem('userData')).token : null;\n  if (token) {\n    config.headers['x-access-token'] = token;\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response?.status === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('userData');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('/users/register', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Registration failed';\n    throw new Error(errorMessage);\n  }\n}\nexport async function loginUser(userData) {\n  try {\n    const response = await api.post('/users/login', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Login failed';\n    throw new Error(errorMessage);\n  }\n}\nexport async function getTodos(token, userId) {\n  try {\n    const response = await api.get('/todos', {\n      params: {\n        userId\n      }\n    });\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to fetch todos';\n    throw new Error(errorMessage);\n  }\n}\nexport async function createTodo(todo, token, userId) {\n  try {\n    const response = await api.post('/todos', todo, {\n      params: {\n        userId\n      }\n    });\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to create todo';\n    throw new Error(errorMessage);\n  }\n}\nexport async function updateTodo(todo, token) {\n  try {\n    if (todo.completed) {\n      todo.completed_time = Date.now();\n    } else {\n      todo.completed_time = null;\n    }\n    const response = await api.put(`/todos/${todo._id}`, todo);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to update todo';\n    throw new Error(errorMessage);\n  }\n}\nexport async function deleteTodo(id, token) {\n  try {\n    const response = await api.delete(`/todos/${id}`);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete todo';\n    throw new Error(errorMessage);\n  }\n}\nexport async function deleteAllTodos(token, userId) {\n  try {\n    const response = await api.delete('/todos/delete/all', {\n      params: {\n        userId\n      }\n    });\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete all todos';\n    throw new Error(errorMessage);\n  }\n}","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","JSON","parse","headers","error","Promise","reject","response","status","removeItem","window","location","href","registerUser","userData","post","data","success","errorMessage","message","Error","loginUser","getTodos","userId","get","params","createTodo","todo","updateTodo","completed","completed_time","Date","now","put","_id","deleteTodo","id","delete","deleteAllTodos"],"sources":["C:/Users/ayanm/Downloads/todo-app-mevn-main/todo-app-mevn-main/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// API Base URL - Change this to your local server when using MongoDB Compass\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://todo-app-server-eosin.vercel.app/api'\n  : 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('userData') \n      ? JSON.parse(localStorage.getItem('userData')).token \n      : null;\n    \n    if (token) {\n      config.headers['x-access-token'] = token;\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('userData');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('/users/register', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Registration failed';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function loginUser(userData) {\n  try {\n    const response = await api.post('/users/login', userData);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Login failed';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function getTodos(token, userId) {\n  try {\n    const response = await api.get('/todos', {\n      params: { userId }\n    });\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to fetch todos';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function createTodo(todo, token, userId) {\n  try {\n    const response = await api.post('/todos', todo, {\n      params: { userId }\n    });\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to create todo';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function updateTodo(todo, token) {\n  try {\n    if (todo.completed) {\n      todo.completed_time = Date.now();\n    } else {\n      todo.completed_time = null;\n    }\n\n    const response = await api.put(`/todos/${todo._id}`, todo);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to update todo';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function deleteTodo(id, token) {\n  try {\n    const response = await api.delete(`/todos/${id}`);\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete todo';\n    throw new Error(errorMessage);\n  }\n}\n\nexport async function deleteAllTodos(token, userId) {\n  try {\n    const response = await api.delete('/todos/delete/all', {\n      params: { userId }\n    });\n    // Handle new response format: { success, message, data }\n    if (response.data.success && response.data.data) {\n      return response.data.data;\n    }\n    // Handle old response format or direct data\n    return response.data.data || response.data;\n  } catch (error) {\n    const errorMessage = error.response?.data?.message || error.response?.data || error.message || 'Failed to delete all todos';\n    throw new Error(errorMessage);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}